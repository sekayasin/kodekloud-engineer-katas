---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote-deployment
  namespace: vote
  labels:
    app: vote-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote-app
  template:
    metadata:
      labels:
        app: vote-app
    spec:
      containers:
      - name: vote
        image: kodekloud/examplevotingapp_vote:before
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: vote-service
  namespace: vote
spec:
  selector:
    app: vote-app
  ports:
  - port: 5000
    targetPort: 80
    nodePort: 31000
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: vote
  labels:
    app: redis-app  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-app
  template:
    metadata:
      labels:
        app: redis-app
    spec:
      containers:
      - name: redis
        image: redis:alpine
        volumeMounts:
          - mountPath: /data
            name: redis-data
      volumes:
        - name: redis-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: vote
spec:
  selector:
    app: redis-app
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: vote
  labels:
    app: worker-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker-app
  template:
    metadata:
      labels:
        app: worker-app
    spec:
      containers:
      - name: worker
        image: kodekloud/examplevotingapp_worker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  namespace: vote
  labels:
    app: db-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-app
  template:
    metadata:
      labels:
        app: db-app
    spec:
      containers:
      - name: postgres
        image: postgres:9.4
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: db-data
        env:
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: postgres
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust
      volumes:
        - name: db-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: vote
  labels:
    app: db-app
spec:
  selector:
    app: db-app
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-deployment
  namespace: vote
  labels:
    app: result-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result-app
  template:
    metadata:
      labels:
        app: result-app
    spec:
      containers:
      - name: result
        image: kodekloud/examplevotingapp_result:before
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: result-service
  namespace: vote
  labels:
    app: result-app
spec:
  selector:
    app: result-app
  ports:
  - port: 5001
    targetPort: 80
    nodePort: 31001
  type: NodePort



            



            

